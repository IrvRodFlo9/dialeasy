{"version":3,"sources":["utils/data.js"],"names":["calculateIngest","calculateEquivalent","calculateDialisis","calculateUF","calculateWater","unlockQuantity","unlockDialisisEntries","unlockCalculateWater","unlockCalculateBtn","generateFoods","generateEntryResult","generateResult","generateWaterCalculator","foods","water","optionName","unit","equivalent","type","potassiumContent","jelly","apple","orange","mango","watermelon","papaya","pineapple","melon","pear","tangerine","tuna","grape","banana","higo","toronja","mangoA","grenade","raspberry","cherry","cranberry","lichis","mamey","dominicBanana","blackberry","zapote","blueberry","guanabana","nispero","nopal","carrot","carrotMini","tomato","brocoli","pumpkin","potato","jicama","lettuce","onion","chilePoblano","verdolaga","coliflor","ejote","pumpkinFlower","pepper","betabel","huitlacoche","setas","chard","spinachCooked","spinach","chileC","huazontle","berro","quelite","greenTomato","xoconostle","cilantro","inputsFunctions","inputQuantity","entry","selectFood","inputInfuse","inputDrain","inputsWaterCalculator","inputs","btnCalculate","inpuInfuseYesterday","entries","ingest","className","eventType","functionEvent","classDisplay","dialisis","yesterday","inputInfuseYesterday","entriesResults","entryIngest","textLabel","classStyle","entryDialisis","entryDatas","extraClasses","html","data","entryInfuseYesterday","appendBtns","appendIngest","classMain","addText","classAdd","classCalculate","entryToAdd","resultType","calculateFunction","container","appendDialisis","ultrafiltration","results","waterResult","calculator","extraClass","title","dialisisResult","ingestResult","forms","typeAppendBtns"],"mappings":"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","file":"data.js","sourcesContent":["import calculateIngest from \"../ingestForm/calculateIngest.js\";\r\nimport calculateEquivalent from \"../ingestForm/calculateEquivalent.js\";\r\nimport calculateDialisis from \"../waterForm/calculateDialisis.js\";\r\nimport calculateUF from \"../waterForm/calculateUF.js\";\r\nimport calculateWater from \"../waterForm/calculateWater.js\";\r\nimport unlockQuantity from \"../ingestForm/unlockQuantity.js\";\r\nimport unlockDialisisEntries from \"../waterForm/unlockDialisisEntries.js\";\r\nimport unlockCalculateWater from \"../waterForm/unlockCalculateWater.js\";\r\nimport unlockCalculateBtn from \"./unlockCalculateBtn.js\";\r\nimport generateFoods from \"../ingestForm/generateFoods.js\";\r\nimport generateEntryResult from \"./generateEntryResult.js\";\r\nimport generateResult from \"./generateResult.js\";\r\nimport generateWaterCalculator from \"../waterForm/generateWaterCalculator.js\";\r\n\r\nexport const foods = {\r\n  /*  Water  */\r\n  water: {\r\n    optionName: \"Agua\",\r\n    unit: \"mL\",\r\n    equivalent: 1,\r\n    type: \"other\",\r\n    potassiumContent: null,\r\n  },\r\n  jelly: {\r\n    optionName: \"Gelatina\",\r\n    unit: \"Taza\",\r\n    equivalent: 250,\r\n    type: \"other\",\r\n    potassiumContent: null,\r\n  },\r\n  /*  Fruits  */\r\n  apple: {\r\n    optionName: \"Manzana\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  orange: {\r\n    optionName: \"Naranja\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  mango: {\r\n    optionName: \"Mango Manila\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  watermelon: {\r\n    optionName: \"Sand√≠a\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  papaya: {\r\n    optionName: \"Papaya\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  pineapple: {\r\n    optionName: \"Pi√±a\",\r\n    unit: \"Taza\",\r\n    equivalent: 200,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  melon: {\r\n    optionName: \"Mel√≥n\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  pear: {\r\n    optionName: \"Pera\",\r\n    unit: \"Pieza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  tangerine: {\r\n    optionName: \"Mandarina\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  tuna: {\r\n    optionName: \"Tuna\",\r\n    unit: \"Pieza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  grape: {\r\n    optionName: \"Uva\",\r\n    unit: \"Pieza\",\r\n    equivalent: 2.77,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  banana: {\r\n    optionName: \"Pl√°tano\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  higo: {\r\n    optionName: \"Higo\",\r\n    unit: \"Pieza\",\r\n    equivalent: 25,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  toronja: {\r\n    optionName: \"Toronja\",\r\n    unit: \"Taza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  mangoA: {\r\n    optionName: \"Mango Ataulfo\",\r\n    unit: \"Pieza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  grenade: {\r\n    optionName: \"Granda Roja\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  raspberry: {\r\n    optionName: \"Frambuesa\",\r\n    unit: \"Taza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  cherry: {\r\n    optionName: \"Cereza\",\r\n    unit: \"Pieza\",\r\n    equivalent: 2.5,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  cranberry: {\r\n    optionName: \"Ar√°ndano\",\r\n    unit: \"g\",\r\n    equivalent: 0.4,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  lichis: {\r\n    optionName: \"Lichis\",\r\n    unit: \"Pieza\",\r\n    equivalent: 4.2,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  mamey: {\r\n    optionName: \"Mamey\",\r\n    unit: \"Pieza\",\r\n    equivalent: 150,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  dominicBanana: {\r\n    optionName: \"Pl√°tano Dominico\",\r\n    unit: \"Pieza\",\r\n    equivalent: 16.66,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  blackberry: {\r\n    optionName: \"Zarzamora\",\r\n    unit: \"Taza\",\r\n    equivalent: 66.66,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  zapote: {\r\n    optionName: \"Zapote\",\r\n    unit: \"Pieza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  blueberry: {\r\n    optionName: \"Mora Azul\",\r\n    unit: \"Taza\",\r\n    equivalent: 62.5,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  guanabana: {\r\n    optionName: \"Guan√°bana\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  nispero: {\r\n    optionName: \"N√≠spero\",\r\n    unit: \"Pieza\",\r\n    equivalent: 2,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  /*  Vegetables  */\r\n  nopal: {\r\n    optionName: \"Nopal\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  carrot: {\r\n    optionName: \"Zanahoria\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  carrotMini: {\r\n    optionName: \"Zanahoria Mini\",\r\n    unit: \"Pieza\",\r\n    equivalent: 16.66,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  tomato: {\r\n    optionName: \"J√≠tomate\",\r\n    unit: \"g\",\r\n    equivalent: 0.833,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  brocoli: {\r\n    optionName: \"Brocoli\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  pumpkin: {\r\n    optionName: \"Calabaza\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  potato: {\r\n    optionName: \"Papa\",\r\n    unit: \"Tazas\",\r\n    equivalent: 50,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  jicama: {\r\n    optionName: \"J√≠cama\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  lettuce: {\r\n    optionName: \"Lechuga\",\r\n    unit: \"Tazas\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  onion: {\r\n    optionName: \"Cebolla\",\r\n    unit: \"Taza\",\r\n    equivalent: 200,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  chilePoblano: {\r\n    optionName: \"Chile Poblano\",\r\n    unit: \"Pieza\",\r\n    equivalent: 66.66,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  verdolaga: {\r\n    optionName: \"Verdolaga\",\r\n    unit: \"Taza\",\r\n    equivalent: 50,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  coliflor: {\r\n    optionName: \"Coliflor\",\r\n    unit: \"Taza\",\r\n    equivalent: 62.5,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  ejote: {\r\n    optionName: \"Ejote\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  pumpkinFlower: {\r\n    optionName: \"Flor de Calabaza\",\r\n    unit: \"Taza\",\r\n    equivalent: 50,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  pepper: {\r\n    optionName: \"Pimiento\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  betabel: {\r\n    optionName: \"Betabel\",\r\n    unit: \"Taza\",\r\n    equivalent: 200,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  huitlacoche: {\r\n    optionName: \"Huitlacoche\",\r\n    unit: \"Taza\",\r\n    equivalent: 150,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  setas: {\r\n    optionName: \"Setas\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  chard: {\r\n    optionName: \"Acelga\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  spinachCooked: {\r\n    optionName: \"Espinaca Cocida\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  spinach: {\r\n    optionName: \"Espinaca Cruda\",\r\n    unit: \"Taza\",\r\n    equivalent: 25,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  chileC: {\r\n    optionName: \"Chile Cuaresme√±o\",\r\n    unit: \"Pieza\",\r\n    equivalent: 25,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  huazontle: {\r\n    optionName: \"Huazontle\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  berro: {\r\n    optionName: \"Berro\",\r\n    unit: \"Taza\",\r\n    equivalent: 50,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  quelite: {\r\n    optionName: \"Quelite\",\r\n    unit: \"g\",\r\n    equivalent: 0.625,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  greenTomato: {\r\n    optionName: \"Tomate verde\",\r\n    unit: \"Pieza\",\r\n    equivalent: 10,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  xoconostle: {\r\n    optionName: \"Xoconostle\",\r\n    unit: \"Pieza\",\r\n    equivalent: 16.66,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  cilantro: {\r\n    optionName: \"Cilantro\",\r\n    unit: \"Taza\",\r\n    equivalent: 28.7,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n};\r\n\r\nexport const inputsFunctions = {\r\n  inputQuantity: (entry) => {\r\n    generateEntryResult(\"entryIngest\", entry, calculateEquivalent);\r\n    unlockCalculateBtn(entry);\r\n  },\r\n  selectFood: (entry) => {\r\n    unlockQuantity(entry);\r\n    generateEntryResult(\"entryIngest\", entry, calculateEquivalent);\r\n  },\r\n  inputInfuse: (entry) => {\r\n    generateEntryResult(\"entryDialisis\", entry, calculateDialisis);\r\n    unlockCalculateBtn(entry);\r\n  },\r\n  inputDrain: (entry) => {\r\n    generateEntryResult(\"entryDialisis\", entry, calculateDialisis);\r\n    unlockCalculateBtn(entry);\r\n  },\r\n  inputsWaterCalculator: (inputs, btnCalculate) => {\r\n    unlockCalculateWater(inputs, btnCalculate);\r\n  },\r\n  inpuInfuseYesterday: (entry) => {\r\n    unlockDialisisEntries(entry);\r\n  },\r\n};\r\n\r\nexport const entries = {\r\n  ingest: {\r\n    inputs: {\r\n      inputQuantity: {\r\n        className: \"input-quantity\",\r\n        eventType: \"input\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.inputQuantity(entry);\r\n        },\r\n      },\r\n      selectFood: {\r\n        className: \"select-food\",\r\n        eventType: \"change\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.selectFood(entry);\r\n        },\r\n      },\r\n    },\r\n    classDisplay: \"water-quantity\",\r\n  },\r\n  dialisis: {\r\n    inputs: {\r\n      inputInfuse: {\r\n        className: \"input-infuse\",\r\n        eventType: \"input\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.inputInfuse(entry);\r\n        },\r\n      },\r\n      inputDrain: {\r\n        className: \"input-drain\",\r\n        eventType: \"input\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.inputDrain(entry);\r\n        },\r\n      },\r\n    },\r\n    classDisplay: \"dialisis-equivalent\",\r\n  },\r\n  yesterday: {\r\n    inputs: {\r\n      inputInfuseYesterday: {\r\n        className: \"input-infuse\",\r\n        eventType: \"input\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.inpuInfuseYesterday(entry);\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const entriesResults = {\r\n  entryIngest: {\r\n    textLabel: \"Cantidad de Agua\",\r\n    classStyle: \"water-equivalent\",\r\n    classDisplay: [\"equivalent-value\", entries.ingest.classDisplay],\r\n  },\r\n  entryDialisis: {\r\n    textLabel: \"Diferencia\",\r\n    classStyle: \"dialisis-delta\",\r\n    classDisplay: [entries.dialisis.classDisplay],\r\n  },\r\n};\r\n\r\nexport const entryDatas = {\r\n  entryIngest: {\r\n    extraClasses: [\"ingest\"],\r\n    html: () => {\r\n      const html = `  \r\n        <div class=\"input input-amount\">\r\n            <label>Cantidad <span class=\"display-units\"></span></label>\r\n            <input type=\"number\" class=\"${\r\n              entries.ingest.inputs.inputQuantity.className\r\n            }\" disabled min=\"0\"/>\r\n        </div>\r\n        <div class=\"input select-ingest\">\r\n            <label>Alimento</label>\r\n            <select class=\"${entries.ingest.inputs.selectFood.className}\">\r\n                <option selected disabled>Seleccione alimento </option>\r\n                ${generateFoods(foods)}\r\n              <optgroup label=\"Frutas\">\r\n                ${generateFoods(foods, \"fruit\")}\r\n              </optgroup>\r\n              <optgroup label=\"Verduras\">\r\n                ${generateFoods(foods, \"vegetable\")}\r\n              </optgroup>\r\n            </select>\r\n        </div>\r\n      `;\r\n      return html;\r\n    },\r\n    data: entries.ingest,\r\n  },\r\n  entryInfuseYesterday: {\r\n    extraClasses: [\"dialisis\", \"yesterday-dialisis\"],\r\n    html: () => {\r\n      const html = `  \r\n        <div class=\"input last-day\">\r\n          <label>Entra (Infunde) √∫ltimo d√≠a anterior (mL)</label>\r\n          <input type=\"number\" class=\"${entries.yesterday.inputs.inputInfuseYesterday.className}\" />\r\n        </div>\r\n      `;\r\n      return html;\r\n    },\r\n    data: entries.yesterday,\r\n  },\r\n  entryDialisis: {\r\n    extraClasses: [\"dialisis\"],\r\n    html: () => {\r\n      const html = `  \r\n        <div class=\"input\">\r\n          <label>Entra (Infunde) mL</label>\r\n          <input type=\"number\" class=\"${entries.dialisis.inputs.inputInfuse.className} min=\"0\"\"/>\r\n        </div>\r\n        <div class=\"input\">\r\n          <label>Sale (Drena) mL</label>\r\n          <input type=\"number\" class=\"${entries.dialisis.inputs.inputDrain.className} min=\"0\"\"/>\r\n        </div>\r\n      `;\r\n      return html;\r\n    },\r\n    data: entries.dialisis,\r\n  },\r\n};\r\n\r\nexport const appendBtns = {\r\n  appendIngest: {\r\n    classMain: \"apend-ingest\",\r\n    addText: \"Agregar Ingesta\",\r\n    classAdd: \"add-ingest\",\r\n    classCalculate: \"calculate-ingest\",\r\n    entryToAdd: \"entryIngest\",\r\n    resultType: \"ingestResult\",\r\n    calculateFunction: (resultType, container) => {\r\n      generateResult(resultType, container);\r\n    },\r\n  },\r\n  appendDialisis: {\r\n    classMain: \"apend-dialisis\",\r\n    addText: \"Agregar Dialisis\",\r\n    classAdd: \"add-dialisis\",\r\n    classCalculate: \"calculate-dialisis\",\r\n    entryToAdd: \"entryDialisis\",\r\n    resultType: \"dialisisResult\",\r\n    calculateFunction: (resultType, container) => {\r\n      const ultrafiltration = calculateUF();\r\n\r\n      generateResult(resultType, container);\r\n      generateWaterCalculator(container, ultrafiltration);\r\n    },\r\n  },\r\n};\r\n\r\nexport const results = {\r\n  waterResult: {\r\n    calculator: () => {\r\n      return calculateWater();\r\n    },\r\n    extraClass: \"water-result\",\r\n    title: \"Resultado V√≠a Oral\",\r\n  },\r\n  dialisisResult: {\r\n    calculator: () => {\r\n      return calculateUF();\r\n    },\r\n    extraClass: \"dialisis-result\",\r\n    title: \"La Ultrafiltraci√≥n 24 h es:\",\r\n  },\r\n  ingestResult: {\r\n    calculator: () => {\r\n      return calculateIngest();\r\n    },\r\n    extraClass: \"ingest-result\",\r\n    title: \"El total de agua es:\",\r\n  },\r\n};\r\n\r\nexport const forms = {\r\n  dialisis: {\r\n    typeAppendBtns: \"appendDialisis\",\r\n  },\r\n  ingest: {\r\n    typeAppendBtns: \"appendIngest\",\r\n  },\r\n};\r\n"]}