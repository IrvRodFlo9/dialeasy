{"version":3,"sources":["utils/data.js"],"names":["calculateIngest","calculateEquivalent","calculateDialisis","calculateUF","calculateWater","unlockQuantity","unlockDialisisEntries","unlockCalculateWater","unlockCalculateBtn","generateFoods","generateEntryResult","generateResult","generateWaterCalculator","potassiumContent","runIngestForm","runWaterForm","foods","water","optionName","unit","equivalent","type","jelly","apple","orange","mango","watermelon","papaya","pineapple","melon","pear","tangerine","tuna","grape","banana","higo","toronja","mangoA","grenade","raspberry","cherry","cranberry","lichis","mamey","dominicBanana","blackberry","zapote","blueberry","guanabana","nispero","nopal","carrot","carrotMini","tomato","brocoli","pumpkin","potato","jicama","lettuce","onion","chilePoblano","verdolaga","coliflor","ejote","pumpkinFlower","pepper","betabel","huitlacoche","setas","chard","spinachCooked","spinach","chileC","huazontle","berro","quelite","greenTomato","xoconostle","cilantro","inputsFunctions","inputQuantity","entry","selectFood","inputInfuse","inputDrain","inputsWaterCalculator","inputs","btnCalculate","inpuInfuseYesterday","entries","ingest","className","eventType","functionEvent","classDisplay","dialisis","yesterday","inputInfuseYesterday","entriesResults","entryIngest","textLabel","classStyle","entryDialisis","entryDatas","extraClasses","html","data","entryInfuseYesterday","appendBtns","appendIngest","classMain","addText","classAdd","classCalculate","entryToAdd","resultType","calculateFunction","container","appendDialisis","ultrafiltration","results","waterResult","calculator","extraClass","title","dialisisResult","ingestResult","forms","waterManual","subtitle","styleClass","initContent","typeAppendBtns","run"],"mappings":"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","file":"data.js","sourcesContent":["import calculateIngest from \"../ingestForm/calculateIngest.js\";\r\nimport calculateEquivalent from \"../ingestForm/calculateEquivalent.js\";\r\nimport calculateDialisis from \"../waterForm/calculateDialisis.js\";\r\nimport calculateUF from \"../waterForm/calculateUF.js\";\r\nimport calculateWater from \"../waterForm/calculateWater.js\";\r\nimport unlockQuantity from \"../ingestForm/unlockQuantity.js\";\r\nimport unlockDialisisEntries from \"../waterForm/unlockDialisisEntries.js\";\r\nimport unlockCalculateWater from \"../waterForm/unlockCalculateWater.js\";\r\nimport unlockCalculateBtn from \"./unlockCalculateBtn.js\";\r\nimport generateFoods from \"../ingestForm/generateFoods.js\";\r\nimport generateEntryResult from \"./generateEntryResult.js\";\r\nimport generateResult from \"./generateResult.js\";\r\nimport generateWaterCalculator from \"../waterForm/generateWaterCalculator.js\";\r\nimport potassiumContent from \"../ingestForm/potassiumIngest.js\";\r\nimport runIngestForm from \"../ingestForm/main.js\";\r\nimport runWaterForm from \"../waterForm/main.js\";\r\n\r\nexport const foods = {\r\n  /*  Water  */\r\n  water: {\r\n    optionName: \"Agua\",\r\n    unit: \"mL\",\r\n    equivalent: 1,\r\n    type: \"other\",\r\n    potassiumContent: null,\r\n  },\r\n  jelly: {\r\n    optionName: \"Gelatina\",\r\n    unit: \"Taza\",\r\n    equivalent: 250,\r\n    type: \"other\",\r\n    potassiumContent: null,\r\n  },\r\n  /*  Fruits  */\r\n  apple: {\r\n    optionName: \"Manzana\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  orange: {\r\n    optionName: \"Naranja\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  mango: {\r\n    optionName: \"Mango Manila\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  watermelon: {\r\n    optionName: \"Sandía\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  papaya: {\r\n    optionName: \"Papaya\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  pineapple: {\r\n    optionName: \"Piña\",\r\n    unit: \"Taza\",\r\n    equivalent: 200,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  melon: {\r\n    optionName: \"Melón\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  pear: {\r\n    optionName: \"Pera\",\r\n    unit: \"Pieza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  tangerine: {\r\n    optionName: \"Mandarina\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  tuna: {\r\n    optionName: \"Tuna\",\r\n    unit: \"Pieza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  grape: {\r\n    optionName: \"Uva\",\r\n    unit: \"Pieza\",\r\n    equivalent: 2.77,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  banana: {\r\n    optionName: \"Plátano\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  higo: {\r\n    optionName: \"Higo\",\r\n    unit: \"Pieza\",\r\n    equivalent: 25,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  toronja: {\r\n    optionName: \"Toronja\",\r\n    unit: \"Taza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  mangoA: {\r\n    optionName: \"Mango Ataulfo\",\r\n    unit: \"Pieza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  grenade: {\r\n    optionName: \"Granda Roja\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  raspberry: {\r\n    optionName: \"Frambuesa\",\r\n    unit: \"Taza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  cherry: {\r\n    optionName: \"Cereza\",\r\n    unit: \"Pieza\",\r\n    equivalent: 2.5,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  cranberry: {\r\n    optionName: \"Arándano\",\r\n    unit: \"g\",\r\n    equivalent: 0.4,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  lichis: {\r\n    optionName: \"Lichis\",\r\n    unit: \"Pieza\",\r\n    equivalent: 4.2,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  mamey: {\r\n    optionName: \"Mamey\",\r\n    unit: \"Pieza\",\r\n    equivalent: 150,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  dominicBanana: {\r\n    optionName: \"Plátano Dominico\",\r\n    unit: \"Pieza\",\r\n    equivalent: 16.66,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  blackberry: {\r\n    optionName: \"Zarzamora\",\r\n    unit: \"Taza\",\r\n    equivalent: 66.66,\r\n    type: \"fruit\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  zapote: {\r\n    optionName: \"Zapote\",\r\n    unit: \"Pieza\",\r\n    equivalent: 100,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  blueberry: {\r\n    optionName: \"Mora Azul\",\r\n    unit: \"Taza\",\r\n    equivalent: 62.5,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  guanabana: {\r\n    optionName: \"Guanábana\",\r\n    unit: \"Pieza\",\r\n    equivalent: 50,\r\n    type: \"fruit\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  nispero: {\r\n    optionName: \"Níspero\",\r\n    unit: \"Pieza\",\r\n    equivalent: 2,\r\n    type: \"fruit\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  /*  Vegetables  */\r\n  nopal: {\r\n    optionName: \"Nopal\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  carrot: {\r\n    optionName: \"Zanahoria\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  carrotMini: {\r\n    optionName: \"Zanahoria Mini\",\r\n    unit: \"Pieza\",\r\n    equivalent: 16.66,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  tomato: {\r\n    optionName: \"Jítomate\",\r\n    unit: \"g\",\r\n    equivalent: 0.833,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  brocoli: {\r\n    optionName: \"Brocoli\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  pumpkin: {\r\n    optionName: \"Calabaza\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  potato: {\r\n    optionName: \"Papa\",\r\n    unit: \"Tazas\",\r\n    equivalent: 50,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  jicama: {\r\n    optionName: \"Jícama\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  lettuce: {\r\n    optionName: \"Lechuga\",\r\n    unit: \"Tazas\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  onion: {\r\n    optionName: \"Cebolla\",\r\n    unit: \"Taza\",\r\n    equivalent: 200,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  chilePoblano: {\r\n    optionName: \"Chile Poblano\",\r\n    unit: \"Pieza\",\r\n    equivalent: 66.66,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  verdolaga: {\r\n    optionName: \"Verdolaga\",\r\n    unit: \"Taza\",\r\n    equivalent: 50,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  coliflor: {\r\n    optionName: \"Coliflor\",\r\n    unit: \"Taza\",\r\n    equivalent: 62.5,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  ejote: {\r\n    optionName: \"Ejote\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  pumpkinFlower: {\r\n    optionName: \"Flor de Calabaza\",\r\n    unit: \"Taza\",\r\n    equivalent: 50,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  pepper: {\r\n    optionName: \"Pimiento\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  betabel: {\r\n    optionName: \"Betabel\",\r\n    unit: \"Taza\",\r\n    equivalent: 200,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  huitlacoche: {\r\n    optionName: \"Huitlacoche\",\r\n    unit: \"Taza\",\r\n    equivalent: 150,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  setas: {\r\n    optionName: \"Setas\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  chard: {\r\n    optionName: \"Acelga\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  spinachCooked: {\r\n    optionName: \"Espinaca Cocida\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  spinach: {\r\n    optionName: \"Espinaca Cruda\",\r\n    unit: \"Taza\",\r\n    equivalent: 25,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  chileC: {\r\n    optionName: \"Chile Cuaresmeño\",\r\n    unit: \"Pieza\",\r\n    equivalent: 25,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  huazontle: {\r\n    optionName: \"Huazontle\",\r\n    unit: \"Taza\",\r\n    equivalent: 100,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  berro: {\r\n    optionName: \"Berro\",\r\n    unit: \"Taza\",\r\n    equivalent: 50,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"low\",\r\n  },\r\n  quelite: {\r\n    optionName: \"Quelite\",\r\n    unit: \"g\",\r\n    equivalent: 0.625,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n  greenTomato: {\r\n    optionName: \"Tomate verde\",\r\n    unit: \"Pieza\",\r\n    equivalent: 10,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  xoconostle: {\r\n    optionName: \"Xoconostle\",\r\n    unit: \"Pieza\",\r\n    equivalent: 16.66,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"medium\",\r\n  },\r\n  cilantro: {\r\n    optionName: \"Cilantro\",\r\n    unit: \"Taza\",\r\n    equivalent: 28.7,\r\n    type: \"vegetable\",\r\n    potassiumContent: \"high\",\r\n  },\r\n};\r\n\r\nexport const inputsFunctions = {\r\n  inputQuantity: (entry) => {\r\n    generateEntryResult(\"entryIngest\", entry, calculateEquivalent);\r\n    unlockCalculateBtn(entry);\r\n  },\r\n  selectFood: (entry) => {\r\n    unlockQuantity(entry);\r\n    generateEntryResult(\"entryIngest\", entry, calculateEquivalent);\r\n  },\r\n  inputInfuse: (entry) => {\r\n    generateEntryResult(\"entryDialisis\", entry, calculateDialisis);\r\n    unlockCalculateBtn(entry);\r\n  },\r\n  inputDrain: (entry) => {\r\n    generateEntryResult(\"entryDialisis\", entry, calculateDialisis);\r\n    unlockCalculateBtn(entry);\r\n  },\r\n  inputsWaterCalculator: (inputs, btnCalculate) => {\r\n    unlockCalculateWater(inputs, btnCalculate);\r\n  },\r\n  inpuInfuseYesterday: (entry) => {\r\n    unlockDialisisEntries(entry);\r\n  },\r\n};\r\n\r\nexport const entries = {\r\n  ingest: {\r\n    inputs: {\r\n      inputQuantity: {\r\n        className: \"input-quantity\",\r\n        eventType: \"input\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.inputQuantity(entry);\r\n        },\r\n      },\r\n      selectFood: {\r\n        className: \"select-food\",\r\n        eventType: \"change\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.selectFood(entry);\r\n        },\r\n      },\r\n    },\r\n    classDisplay: \"water-quantity\",\r\n  },\r\n  dialisis: {\r\n    inputs: {\r\n      inputInfuse: {\r\n        className: \"input-infuse\",\r\n        eventType: \"input\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.inputInfuse(entry);\r\n        },\r\n      },\r\n      inputDrain: {\r\n        className: \"input-drain\",\r\n        eventType: \"input\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.inputDrain(entry);\r\n        },\r\n      },\r\n    },\r\n    classDisplay: \"dialisis-equivalent\",\r\n  },\r\n  yesterday: {\r\n    inputs: {\r\n      inputInfuseYesterday: {\r\n        className: \"input-infuse\",\r\n        eventType: \"input\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.inpuInfuseYesterday(entry);\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const entriesResults = {\r\n  entryIngest: {\r\n    textLabel: \"Cantidad de Agua\",\r\n    classStyle: \"water-equivalent\",\r\n    classDisplay: [\"equivalent-value\", entries.ingest.classDisplay],\r\n  },\r\n  entryDialisis: {\r\n    textLabel: \"Diferencia\",\r\n    classStyle: \"dialisis-delta\",\r\n    classDisplay: [entries.dialisis.classDisplay],\r\n  },\r\n};\r\n\r\nexport const entryDatas = {\r\n  entryIngest: {\r\n    extraClasses: [\"ingest\"],\r\n    html: () => {\r\n      const html = `  \r\n        <div class=\"input input-amount\">\r\n            <label>Cantidad <span class=\"display-units\"></span></label>\r\n            <input type=\"number\" class=\"${\r\n              entries.ingest.inputs.inputQuantity.className\r\n            }\" disabled min=\"0\"/>\r\n        </div>\r\n        <div class=\"input select-ingest\">\r\n            <label>Alimento</label>\r\n            <select class=\"${entries.ingest.inputs.selectFood.className}\">\r\n                <option selected disabled>Seleccione alimento </option>\r\n                ${generateFoods(foods)}\r\n              <optgroup label=\"Frutas\">\r\n                ${generateFoods(foods, \"fruit\")}\r\n              </optgroup>\r\n              <optgroup label=\"Verduras\">\r\n                ${generateFoods(foods, \"vegetable\")}\r\n              </optgroup>\r\n            </select>\r\n        </div>\r\n      `;\r\n      return html;\r\n    },\r\n    data: entries.ingest,\r\n  },\r\n  entryInfuseYesterday: {\r\n    extraClasses: [\"dialisis\", \"yesterday-dialisis\"],\r\n    html: () => {\r\n      const html = `  \r\n        <div class=\"input last-day\">\r\n          <label>Entra (Infunde) último día anterior (mL)</label>\r\n          <input type=\"number\" class=\"${entries.yesterday.inputs.inputInfuseYesterday.className}\" />\r\n        </div>\r\n      `;\r\n      return html;\r\n    },\r\n    data: entries.yesterday,\r\n  },\r\n  entryDialisis: {\r\n    extraClasses: [\"dialisis\"],\r\n    html: () => {\r\n      const html = `  \r\n        <div class=\"input\">\r\n          <label>Entra (Infunde) mL</label>\r\n          <input type=\"number\" class=\"${entries.dialisis.inputs.inputInfuse.className} min=\"0\"\"/>\r\n        </div>\r\n        <div class=\"input\">\r\n          <label>Sale (Drena) mL</label>\r\n          <input type=\"number\" class=\"${entries.dialisis.inputs.inputDrain.className} min=\"0\"\"/>\r\n        </div>\r\n      `;\r\n      return html;\r\n    },\r\n    data: entries.dialisis,\r\n  },\r\n};\r\n\r\nexport const appendBtns = {\r\n  appendIngest: {\r\n    classMain: \"apend-ingest\",\r\n    addText: \"Agregar Ingesta\",\r\n    classAdd: \"add-ingest\",\r\n    classCalculate: \"calculate-ingest\",\r\n    entryToAdd: \"entryIngest\",\r\n    resultType: \"ingestResult\",\r\n    calculateFunction: (resultType, container) => {\r\n      generateResult(resultType, container);\r\n      potassiumContent(container);\r\n    },\r\n  },\r\n  appendDialisis: {\r\n    classMain: \"apend-dialisis\",\r\n    addText: \"Agregar Dialisis\",\r\n    classAdd: \"add-dialisis\",\r\n    classCalculate: \"calculate-dialisis\",\r\n    entryToAdd: \"entryDialisis\",\r\n    resultType: \"dialisisResult\",\r\n    calculateFunction: (resultType, container) => {\r\n      const ultrafiltration = calculateUF();\r\n      generateResult(resultType, container);\r\n      generateWaterCalculator(container, ultrafiltration);\r\n    },\r\n  },\r\n};\r\n\r\nexport const results = {\r\n  waterResult: {\r\n    calculator: () => {\r\n      return calculateWater();\r\n    },\r\n    extraClass: \"water-result\",\r\n    title: \"Resultado Vía Oral\",\r\n  },\r\n  dialisisResult: {\r\n    calculator: () => {\r\n      return calculateUF();\r\n    },\r\n    extraClass: \"dialisis-result\",\r\n    title: \"La Ultrafiltración 24 h es:\",\r\n  },\r\n  ingestResult: {\r\n    calculator: () => {\r\n      return calculateIngest();\r\n    },\r\n    extraClass: \"ingest-result\",\r\n    title: \"El total de agua es:\",\r\n  },\r\n};\r\n\r\nexport const forms = {\r\n  waterManual: {\r\n    title: \"Agua por Ingerir\",\r\n    subtitle: \"Manual\",\r\n    styleClass: \"form-water\",\r\n    initContent:\r\n      \"<section class='initial-ask'><p>¿Ya calculó la ultrafiltración (UF) de 24 h?</p><div class='btns-yes-no'><button class='btn bg-green'>SI</button><button class='btn bg-red'>NO</button></div></section>\",\r\n    typeAppendBtns: \"appendDialisis\",\r\n    run: () => runWaterForm(),\r\n  },\r\n  ingest: {\r\n    title: \"Ingesta de Agua\",\r\n    subtitle: \"Vía Oral\",\r\n    styleClass: \"form-ingest\",\r\n    initContent: \"<section class='ingest-container'></section>\",\r\n    typeAppendBtns: \"appendIngest\",\r\n    run: () => runIngestForm,\r\n  },\r\n};\r\n"]}