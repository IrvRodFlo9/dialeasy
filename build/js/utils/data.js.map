{"version":3,"sources":["utils/data.js"],"names":["calculateIngest","calculateEquivalent","calculateDialisis","calculateUF","calculateWater","unlockQuantity","unlockDialisisEntries","unlockCalculateWater","unlosckCalculateBtn","generateFoods","generateEntryResult","generateResult","generateWaterCalculator","foods","water","optionName","unit","equivalent","papaya","pinapple","lettuce","jelly","potato","apple","inputsFunctions","inputQuantity","entry","selectFood","inputInfuse","inputDrain","inputsWaterCalculator","inputs","btnCalculate","inpuInfuseYesterday","entries","ingest","className","eventType","functionEvent","classDisplay","dialisis","yesterday","inputInfuseYesterday","entriesResults","entryIngest","textLabel","classStyle","entryDialisis","entryDatas","extraClasses","html","data","entryInfuseYesterday","appendBtns","appendIngest","classMain","addText","classAdd","classCalculate","entryToAdd","resultType","calculateFunction","container","appendDialisis","ultrafiltration","results","waterResult","calculator","extraClass","title","dialisisResult","ingestResult","forms","typeAppendBtns"],"mappings":"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","file":"data.js","sourcesContent":["import calculateIngest from \"../ingestForm/calculateIngest.js\";\r\nimport calculateEquivalent from \"../ingestForm/calculateEquivalent.js\";\r\nimport calculateDialisis from \"../waterForm/calculateDialisis.js\";\r\nimport calculateUF from \"../waterForm/calculateUF.js\";\r\nimport calculateWater from \"../waterForm/calculateWater.js\";\r\nimport unlockQuantity from \"../ingestForm/unlockQuantity.js\";\r\nimport unlockDialisisEntries from \"../waterForm/unlockDialisisEntries.js\";\r\nimport unlockCalculateWater from \"../waterForm/unlockCalculateWater.js\";\r\nimport unlosckCalculateBtn from \"../ingestForm/unlockCalculateBtn.js\";\r\nimport generateFoods from \"../ingestForm/generateFoods.js\";\r\nimport generateEntryResult from \"./generateEntryResult.js\";\r\nimport generateResult from \"./generateResult.js\";\r\nimport generateWaterCalculator from \"../waterForm/generateWaterCalculator.js\";\r\n\r\nexport const foods = {\r\n  water: {\r\n    optionName: \"Agua\",\r\n    unit: \"mL\",\r\n    equivalent: 1,\r\n  },\r\n  papaya: {\r\n    optionName: \"Papaya\",\r\n    unit: \"Tazas\",\r\n    equivalent: 100,\r\n  },\r\n  pinapple: {\r\n    optionName: \"Piña\",\r\n    unit: \"Tazas\",\r\n    equivalent: 100,\r\n  },\r\n  lettuce: {\r\n    optionName: \"Lechuga\",\r\n    unit: \"Tazas\",\r\n    equivalent: 100,\r\n  },\r\n  jelly: {\r\n    optionName: \"Gelatina\",\r\n    unit: \"Tazas\",\r\n    equivalent: 250,\r\n  },\r\n  potato: {\r\n    optionName: \"Papa\",\r\n    unit: \"Tazas\",\r\n    equivalent: 50,\r\n  },\r\n  apple: {\r\n    optionName: \"Manzana\",\r\n    unit: \"Tazas\",\r\n    equivalent: 50,\r\n  },\r\n};\r\n\r\nexport const inputsFunctions = {\r\n  inputQuantity: (entry) => {\r\n    generateEntryResult(\"entryIngest\", entry, calculateEquivalent);\r\n    unlosckCalculateBtn(entry);\r\n  },\r\n  selectFood: (entry) => {\r\n    unlockQuantity(entry);\r\n  },\r\n  inputInfuse: (entry) => {\r\n    calculateDialisis(entry);\r\n  },\r\n  inputDrain: (entry) => {\r\n    calculateDialisis(entry);\r\n  },\r\n  inputsWaterCalculator: (inputs, btnCalculate) => {\r\n    unlockCalculateWater(inputs, btnCalculate);\r\n  },\r\n  inpuInfuseYesterday: (entry) => {\r\n    unlockDialisisEntries(entry);\r\n  },\r\n};\r\n\r\nexport const entries = {\r\n  ingest: {\r\n    inputs: {\r\n      inputQuantity: {\r\n        className: \"input-quantity\",\r\n        eventType: \"input\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.inputQuantity(entry);\r\n        },\r\n      },\r\n      selectFood: {\r\n        className: \"select-food\",\r\n        eventType: \"change\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.selectFood(entry);\r\n        },\r\n      },\r\n    },\r\n    classDisplay: \"water-quantity\",\r\n  },\r\n  dialisis: {\r\n    inputs: {\r\n      inputInfuse: {\r\n        className: \"input-infuse\",\r\n        eventType: \"input\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.inputInfuse(entry);\r\n        },\r\n      },\r\n      inputDrain: {\r\n        className: \"input-drain\",\r\n        eventType: \"input\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.inputDrain(entry);\r\n        },\r\n      },\r\n    },\r\n    classDisplay: \"dialisis-equivalent\",\r\n  },\r\n  yesterday: {\r\n    inputs: {\r\n      inputInfuseYesterday: {\r\n        className: \"input-infuse\",\r\n        eventType: \"input\",\r\n        functionEvent: (entry) => {\r\n          inputsFunctions.inpuInfuseYesterday(entry);\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const entriesResults = {\r\n  entryIngest: {\r\n    textLabel: \"Cantidad de Agua\",\r\n    classStyle: \"water-equivalent\",\r\n    classDisplay: [\"equivalent-value\", entries.ingest.classDisplay],\r\n  },\r\n  entryDialisis: {\r\n    textLabel: \"Diferencia\",\r\n    classStyle: \"dialisis-delta\",\r\n    classDisplay: [entries.dialisis.classDisplay],\r\n  },\r\n};\r\n\r\nexport const entryDatas = {\r\n  entryIngest: {\r\n    extraClasses: [\"ingest\"],\r\n    html: () => {\r\n      const html = `  \r\n        <div class=\"input input-amount\">\r\n            <label>Cantidad <span class=\"display-units\"></span></label>\r\n            <input type=\"number\" class=\"${\r\n              entries.ingest.inputs.inputQuantity.className\r\n            }\" disabled min=\"0\"/>\r\n        </div>\r\n        <div class=\"input select-ingest\">\r\n            <label>Alimento</label>\r\n            <select class=\"${entries.ingest.inputs.selectFood.className}\">\r\n              <option selected disabled>Seleccione alimento </option>\r\n              ${generateFoods(foods)}\r\n            </select>\r\n        </div>\r\n      `;\r\n      return html;\r\n    },\r\n    data: entries.ingest,\r\n  },\r\n  entryInfuseYesterday: {\r\n    extraClasses: [\"dialisis\", \"yesterday-dialisis\"],\r\n    html: () => {\r\n      const html = `  \r\n        <div class=\"input last-day\">\r\n          <label>Entra (Infunde) último día anterior (mL)</label>\r\n          <input type=\"number\" class=\"${entries.yesterday.inputs.inputInfuseYesterday.className}\" />\r\n        </div>\r\n      `;\r\n      return html;\r\n    },\r\n    data: entries.yesterday,\r\n  },\r\n  entryDialisis: {\r\n    extraClasses: [\"dialisis\"],\r\n    html: () => {\r\n      const html = `  \r\n        <div class=\"input\">\r\n          <label>Entra (Infunde) mL</label>\r\n          <input type=\"number\" class=\"${entries.dialisis.inputs.inputInfuse.className} min=\"0\"\"/>\r\n        </div>\r\n        <div class=\"input\">\r\n          <label>Sale (Drena) mL</label>\r\n          <input type=\"number\" class=\"${entries.dialisis.inputs.inputDrain.className} min=\"0\"\"/>\r\n        </div>\r\n        <div class=\"dialisis-delta entry-result\">\r\n          <p>Diferencia</p>\r\n          <p><span class=\"${entries.dialisis.classDisplay}\"></span> mL</p>\r\n        </div>\r\n      `;\r\n      return html;\r\n    },\r\n    data: entries.dialisis,\r\n  },\r\n};\r\n\r\nexport const appendBtns = {\r\n  appendIngest: {\r\n    classMain: \"apend-ingest\",\r\n    addText: \"Agregar Ingesta\",\r\n    classAdd: \"add-ingest\",\r\n    classCalculate: \"calculate-ingest\",\r\n    entryToAdd: \"entryIngest\",\r\n    resultType: \"ingestResult\",\r\n    calculateFunction: (resultType, container) => {\r\n      generateResult(resultType, container);\r\n    },\r\n  },\r\n  appendDialisis: {\r\n    classMain: \"apend-dialisis\",\r\n    addText: \"Agregar Dialisis\",\r\n    classAdd: \"add-dialisis\",\r\n    classCalculate: \"calculate-dialisis\",\r\n    entryToAdd: \"entryDialisis\",\r\n    resultType: \"dialisisResult\",\r\n    calculateFunction: (resultType, container) => {\r\n      const ultrafiltration = calculateUF();\r\n\r\n      generateResult(resultType, container);\r\n      generateWaterCalculator(container, ultrafiltration);\r\n    },\r\n  },\r\n};\r\n\r\nexport const results = {\r\n  waterResult: {\r\n    calculator: () => {\r\n      return calculateWater();\r\n    },\r\n    extraClass: \"water-result\",\r\n    title: \"Resultado Vía Oral\",\r\n  },\r\n  dialisisResult: {\r\n    calculator: () => {\r\n      return calculateUF();\r\n    },\r\n    extraClass: \"dialisis-result\",\r\n    title: \"La Ultrafiltración 24 h es:\",\r\n  },\r\n  ingestResult: {\r\n    calculator: () => {\r\n      return calculateIngest();\r\n    },\r\n    extraClass: \"ingest-result\",\r\n    title: \"El total de agua es:\",\r\n  },\r\n};\r\n\r\nexport const forms = {\r\n  dialisis: {\r\n    typeAppendBtns: \"appendDialisis\",\r\n  },\r\n  ingest: {\r\n    typeAppendBtns: \"appendIngest\",\r\n  },\r\n};\r\n"]}